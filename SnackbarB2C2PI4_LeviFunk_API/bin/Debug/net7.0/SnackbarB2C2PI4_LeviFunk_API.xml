<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SnackbarB2C2PI4_LeviFunk_API</name>
    </assembly>
    <members>
        <member name="T:SnackbarB2C2PI4_LeviFunk_API.CustomersController">
            <summary>
            The controller class
            </summary>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.CustomersController.#ctor(SnackbarB2C2PI4_LeviFunk_MVC.Data.LibraryDbContext)">
            <summary>
            Constructor for the controller
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.CustomersController.GetCustomer">
            <summary>
            Get a list of customers
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.CustomersController.GetCustomer(System.String)">
            <summary>
            Get a specific customer
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.CustomersController.GetCustomer(System.Int32)">
            <summary>
            Get a specific customer
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.CustomersController.PutCustomer(System.Int32,SnackbarB2C2PI4_LeviFunk_ClassLibrary.Customer)">
            <summary>
            Edit the customer
            </summary>
            <param name="id"></param>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.CustomersController.PostCustomer(SnackbarB2C2PI4_LeviFunk_ClassLibrary.Customer)">
            <summary>
            Create a new customer
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.CustomersController.DeleteCustomer(System.Int32)">
            <summary>
            Delete a customer
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.CustomersController.CustomerExists(System.Int32)">
            <summary>
            Check if the customer already exists in the database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SnackbarB2C2PI4_LeviFunk_API.OrderProductsController">
            <summary>
            The controller class
            </summary>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrderProductsController.#ctor(SnackbarB2C2PI4_LeviFunk_MVC.Data.LibraryDbContext)">
            <summary>
            The constructor for the controller
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrderProductsController.GetOrderProducts(System.Int32)">
            <summary>
            Get a list of all products for an order
            </summary>
            <returns>order.products --> List(OrderProducts)</returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrderProductsController.PutOrderProduct(System.Int32,SnackbarB2C2PI4_LeviFunk_ClassLibrary.OrderProduct)">
            <summary>
            Update an Orderproduct
            </summary>
            <param name="id"></param>
            <param name="orderProduct"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrderProductsController.PutOrderProduct(System.Int32,System.Collections.Generic.List{SnackbarB2C2PI4_LeviFunk_ClassLibrary.OrderProduct})">
            <summary>
            Update an Orderproduct
            </summary>
            <param name="id"></param>
            <param name="orderProducts"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrderProductsController.PostOrderProduct(SnackbarB2C2PI4_LeviFunk_ClassLibrary.OrderProduct)">
            <summary>
            Create new Orderproduct in the database
            </summary>
            <param name="orderProduct"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrderProductsController.PostOrderProduct(System.Collections.Generic.List{SnackbarB2C2PI4_LeviFunk_ClassLibrary.OrderProduct})">
            <summary>
            Create new Orderproducts for an order in the database
            </summary>
            <param name="orderProducts"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrderProductsController.DeleteOrderProduct(System.Int32,System.Int32)">
            <summary>
            Delete the product
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrderProductsController.OrderProductExists(System.Int32)">
            <summary>
            Check if the orderproduct already exists in the database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SnackbarB2C2PI4_LeviFunk_API.OrdersController">
            <summary>
            The controller class
            </summary>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrdersController.#ctor(SnackbarB2C2PI4_LeviFunk_MVC.Data.LibraryDbContext)">
            <summary>
            Constructor of the controller
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrdersController.GetOrders">
            <summary>
            Get a list of all orders
            </summary>
            <returns>List(Order)</returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrdersController.GetOrders(System.Int32)">
            <summary>
            Get a list of all orders from a customer
            </summary>
            <returns>List(Order)</returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrdersController.GetOrder(System.Int32)">
            <summary>
            Get a specific order
            </summary>
            <param name="id"></param>
            <returns>Order</returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrdersController.PutOrder(System.Int32,SnackbarB2C2PI4_LeviFunk_ClassLibrary.Order)">
            <summary>
            Update an order
            </summary>
            <param name="id"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrdersController.PostOrder(SnackbarB2C2PI4_LeviFunk_ClassLibrary.Order)">
            <summary>
            Create new Order in the database
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrdersController.PostOrderProduct(System.Collections.Generic.List{SnackbarB2C2PI4_LeviFunk_ClassLibrary.OrderProduct})">
            <summary>
            Save the list of order products to the database
            </summary>
            <param name="products"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrdersController.DeleteOrder(System.Int32)">
            <summary>
            Delete the order
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OrdersController.OrderExists(System.Int32)">
            <summary>
            Check if the order already exists in the database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SnackbarB2C2PI4_LeviFunk_API.OwnersController">
            <summary>
            The controller class
            </summary>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OwnersController.#ctor(SnackbarB2C2PI4_LeviFunk_MVC.Data.LibraryDbContext)">
            <summary>
            The constructor of the controller
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OwnersController.GetOwners">
            <summary>
            Get a list of all owners
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OwnersController.GetOwner(System.Int32)">
            <summary>
            Get a specific Owner
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OwnersController.PutOwner(System.Int32,SnackbarB2C2PI4_LeviFunk_ClassLibrary.Owner)">
            <summary>
            Update a owner
            </summary>
            <param name="id"></param>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OwnersController.PostOwner(SnackbarB2C2PI4_LeviFunk_ClassLibrary.Owner)">
            <summary>
            Create an owner
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OwnersController.DeleteOwner(System.Int32)">
            <summary>
            Delete an owner
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.OwnersController.OwnerExists(System.Int32)">
            <summary>
            Check if an owner already exists in the database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SnackbarB2C2PI4_LeviFunk_API.ProductsController">
            <summary>
            The controller class
            </summary>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.ProductsController.#ctor(SnackbarB2C2PI4_LeviFunk_MVC.Data.LibraryDbContext)">
            <summary>
            The constructor of the controller
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.ProductsController.GetProducts">
            <summary>
            Get a list of all products
            </summary>
            <returns>List(Product)</returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.ProductsController.GetProduct(System.Int32)">
            <summary>
            Get a specific product
            </summary>
            <param name="id"></param>
            <returns>Product</returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.ProductsController.PutProduct(System.Int32,SnackbarB2C2PI4_LeviFunk_ClassLibrary.Product)">
            <summary>
            Update a product
            </summary>
            <param name="id"></param>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.ProductsController.PostProduct(SnackbarB2C2PI4_LeviFunk_ClassLibrary.Product)">
            <summary>
            Create new product in the database
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.ProductsController.DeleteProduct(System.Int32)">
            <summary>
            Delete the product
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.ProductsController.ProductExists(System.Int32)">
            <summary>
            Check if the product exists in the database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SnackbarB2C2PI4_LeviFunk_API.TransactionsController">
            <summary>
            The controller class
            </summary>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.TransactionsController.#ctor(SnackbarB2C2PI4_LeviFunk_MVC.Data.LibraryDbContext)">
            <summary>
            The constructor of the controller
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.TransactionsController.GetTransactions">
            <summary>
            Get a list of all transactions
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.TransactionsController.GetTransaction(System.Int32)">
            <summary>
            Get a specific transaction
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.TransactionsController.PutTransaction(System.Int32,SnackbarB2C2PI4_LeviFunk_ClassLibrary.Transaction)">
            <summary>
            Update a transaction
            </summary>
            <param name="id"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.TransactionsController.PostTransaction(SnackbarB2C2PI4_LeviFunk_ClassLibrary.Transaction)">
            <summary>
            Create a transaction
            </summary>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.TransactionsController.DeleteTransaction(System.Int32)">
            <summary>
            Delete a transaction
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SnackbarB2C2PI4_LeviFunk_API.TransactionsController.TransactionExists(System.Int32)">
            <summary>
            Check if the transaction already exists in the database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
